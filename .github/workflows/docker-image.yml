name: Docker Image CI for GHCR with Compose

on:
  push:
    branches: [ "main" ]
    # セマンティックバージョニングのタグ（例: v1.0.0）がプッシュされた時も実行
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]
  
  # 手動実行を許可する
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    # GHCRへの書き込み権限をジョブに付与
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # (推奨) マルチプラットフォームビルドのためにQEMUをセットアップ
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # (推奨) Docker Composeが利用するBuildxをセットアップ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # GITHUB_TOKENはGitHub Actionsが自動的に生成するシークレットです
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and load Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # docker-compose.override.yamlで指定されているDockerfileのパス
          file: ./docker/Dockerfile
          # プッシュはせず、後続のステップでスキャンするためにローカルにロードする
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image for vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          # metadata-actionが生成したタグのリストから最初のものをスキャン対象とする
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'table'
          # HIGH以上の脆弱性が検知されたらビルドを失敗させる
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push all tags to GHCR
        # プルリクエスト時は実行せず、mainへのプッシュ時と手動実行時のみプッシュする
        if: github.event_name != 'pull_request'
        run: docker push --all-tags ghcr.io/${{ github.repository }}